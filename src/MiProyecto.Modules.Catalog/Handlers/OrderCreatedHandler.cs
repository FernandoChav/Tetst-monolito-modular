
using MediatR;
 // Importamos la definici√≥n del evento
using System.Threading;
using System.Threading.Tasks;
// using MiProyecto.Modules.Orders.Events;
using MiProyecto.SharedKernel.Events; // Update to correct namespace if 'OrderCreatedEvent' is here

namespace MiProyecto.Modules.Catalog.Handlers;

// Esta clase implementa INotificationHandler<T>, donde T es el evento que queremos escuchar.
public class OrderCreatedHandler : INotificationHandler<OrderCreatedEvent>
{
    // MediatR encontrar√° esta clase y llamar√° a este m√©todo autom√°ticamente
    // cuando se publique un evento de tipo OrderCreatedEvent.
    public Task Handle(OrderCreatedEvent notification, CancellationToken cancellationToken)
    {
        Console.WriteLine("--- EVENTO RECIBIDO EN OTRO M√ìDULO ---");
        Console.WriteLine($"üì¶ CAT√ÅLOGO: ¬°Evento 'OrderCreatedEvent' recibido!");
        Console.WriteLine($"üì¶ CAT√ÅLOGO: Reduciendo stock para el pedido {notification.OrderId}.");
        // Aqu√≠ ir√≠a la l√≥gica real, como actualizar la base de datos.
        Console.WriteLine("------------------------------------");
        return Task.CompletedTask;
    }

}